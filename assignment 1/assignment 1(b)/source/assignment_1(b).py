# -*- coding: utf-8 -*-
"""assignment 1(b).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AOqGd_fjMCtwEOtG6hUKcsMeNW12vxHG
"""

import pandas as pd
from google.colab import drive
drive.mount('/content/drive')
DF = pd.read_csv("/content/drive/MyDrive/datasheet/studentperformance/datasheet/StudentsPerformance.csv")
DF

# Load the data
file_path = "/content/drive/MyDrive/datasheet/studentperformance/datasheet/StudentsPerformance.csv"
df = pd.read_csv(file_path)

# Display information about missing values
print("Missing values:\n", df.isnull().sum())

# Remove duplicates
df.drop_duplicates(inplace=True)

# Save the cleaned data
cleaned_file_path = "/content/drive/MyDrive/datasheet/studentperformance/datasheet/StudentsPerformance_cleaned.csv"
df.to_csv(cleaned_file_path, index=False)

print("Cleaned data saved to:", cleaned_file_path)

# Load the data
file_path = "/content/drive/MyDrive/datasheet/studentperformance/datasheet/StudentsPerformance.csv"
df = pd.read_csv(file_path)

# One-hot encoding for 'lunch' and 'test preparation course'
df = pd.get_dummies(df, columns=['lunch', 'test preparation course'])

# Save the updated DataFrame as CSV
updated_file_path = "/content/drive/MyDrive/datasheet/studentperformance/datasheet/StudentsPerformance_updated.csv"
df.to_csv(updated_file_path, index=False)

print("Updated DataFrame saved to:", updated_file_path)

import matplotlib.pyplot as plt

# Load the data
file_path = "/content/drive/MyDrive/datasheet/studentperformance/datasheet/StudentsPerformance_updated.csv"
df = pd.read_csv(file_path)

# Plot
plt.figure(figsize=(10, 6))
df.boxplot(column='math score', by='race/ethnicity', grid=False)
plt.title('Math Score by Race/Ethnicity')
plt.xlabel('Race/Ethnicity')
plt.ylabel('Math Score')
plt.xticks([1, 2, 3, 4, 5], ['Group A', 'Group B', 'Group C', 'Group D', 'Group E'])
plt.savefig('/content/drive/MyDrive/datasheet/studentperformance/datasheet/plots/scatter_plot.png')
plt.show()

import seaborn as sns

# Load the data
file_path = "/content/drive/MyDrive/datasheet/studentperformance/datasheet/StudentsPerformance_updated.csv"
df = pd.read_csv(file_path)

# Plot
plt.figure(figsize=(10, 6))
sns.countplot(y='parental level of education', hue='gender', data=df, palette='pastel')
plt.xlabel('Count')
plt.ylabel('Parental Level of Education')
plt.title('Distribution of Gender by Parental Level of Education')
plt.legend(title='Gender')
plt.savefig('/content/drive/MyDrive/datasheet/studentperformance/datasheet/plots/scatter_plot1.png')
plt.show()

# Load the data
file_path = "/content/drive/MyDrive/datasheet/studentperformance/datasheet/StudentsPerformance_updated.csv"
df = pd.read_csv(file_path)

# Define a custom color palette
custom_palette = ['blue', 'orange']  # Add more colors as needed

# Plot
plt.figure(figsize=(10, 6))
sns.scatterplot(x='reading score', y='writing score', hue='gender', data=df, palette=custom_palette)
plt.xlabel('Reading Score')
plt.ylabel('Writing Score')
plt.title('Reading Score vs Writing Score by Gender')
plt.legend(title='Gender')
plt.grid(True)
plt.savefig('/content/drive/MyDrive/datasheet/studentperformance/datasheet/plots/scatter_plot2.png')
plt.show()

# Load the data
file_path = "/content/drive/MyDrive/datasheet/studentperformance/datasheet/StudentsPerformance_updated.csv"
df = pd.read_csv(file_path)

# Melt the DataFrame to long format
df_long = pd.melt(df, id_vars=['gender'], value_vars=['math score', 'reading score', 'writing score'], var_name='score')

# Define a custom color palette with red and green colors
custom_palette = ['red', 'green']  # Red and green colors

# Plot
plt.figure(figsize=(12, 8))
sns.boxplot(data=df_long, x='score', y='value', hue='gender', palette=custom_palette, width=0.6, showmeans=True, meanprops={"marker":"o", "markerfacecolor":"white", "markeredgecolor":"black"})
plt.title('Scores by Gender')
plt.xlabel('Score Type')
plt.ylabel('Score')
plt.grid(True)
plt.xticks(rotation=45)
plt.legend(title='Gender')
plt.savefig('/content/drive/MyDrive/datasheet/studentperformance/datasheet/plots/scatter_plot3.png')
plt.show()

# Load the data
file_path = "/content/drive/MyDrive/datasheet/studentperformance/datasheet/StudentsPerformance_cleaned.csv"
df = pd.read_csv(file_path)

# Define a custom color palette with violet and black colors
custom_palette = ['violet', 'black']

# Plot
plt.figure(figsize=(8, 6))
sns.countplot(x='test preparation course', hue='gender', data=df, palette=custom_palette)
plt.title('Test Preparation Completion by Gender')
plt.xlabel('Test Preparation Course')
plt.ylabel('Count')
plt.legend(title='Gender')
plt.grid(axis='y')
plt.savefig('/content/drive/MyDrive/datasheet/studentperformance/datasheet/plots/scatter_plot4.png')
plt.show()